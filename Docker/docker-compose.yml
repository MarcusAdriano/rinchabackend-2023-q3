version: '3.5'
services:
  api1: # API - Instância 01
    build: ../.
    hostname: api1
    network_mode: "host"
    depends_on:
      - db
    expose:
      - "9991"
    environment:
      - spring.profiles.active=pr
      - server.port=9991
      - spring.application.name=api1
      - management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
      - spring.data.mongodb.uri=mongodb://localhost:27017/rinchabackend2023-q3?connectTimeoutMS=3000&socketTimeoutMS=3000&maxPoolSize=100&minPoolSize=100
      - management.tracing.sampling.probability=1.0
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '500MB'

  api2: # API - Instância 02
    build: ../.
    hostname: api2
    network_mode: "host"
    depends_on:
      - db
    expose:
      - "9992"
    environment:
      - spring.profiles.active=pr
      - server.port=9992
      - spring.application.name=api2
      - management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
      - spring.data.mongodb.uri=mongodb://localhost:27017/rinchabackend2023-q3?connectTimeoutMS=3000&socketTimeoutMS=3000&maxPoolSize=100&minPoolSize=100
      - management.tracing.sampling.probability=1.0
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '500MB'

  nginx: # Load Balancer
    image: nginx:latest
    network_mode: "host"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    expose:
      - "9999"
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '1GB'

  db: # Banco de dados
    image: mongo:latest
    network_mode: "host"
    expose:
      - "27017"
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1GB'

  zipkin:
    image: openzipkin/zipkin
    network_mode: "host"
    expose:
      - "9411"